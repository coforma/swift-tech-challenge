name: Testing

on:
  workflow_call:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}

permissions:
  id-token: write
  contents: read
  actions: read

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: 'Setup jq'
        uses: dcarbone/install-jq-action@v2.1.0
        with:
          version: '${{ inputs.version }}'
          force: '${{ inputs.force }}'
      - name: 'Check jq'
        # language=sh
        run: |
          which jq
          jq --version
      - uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
      - uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            ~/.cache/Cypress
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: set path
        run: |
          echo "PATH=$(pwd)/node_modules/.bin/:$PATH" >> $GITHUB_ENV
      - name: run unit tests (frontend)
        run: ./scripts/test-unit.sh src/app/testing/jest/frontend
      - name: run unit tests (backend) src/app/testing/jest/frontend
        run: ./scripts/test-unit.sh
      - name: publish test coverage to code climate
        if: env.CODE_CLIMATE_ID != ''
        uses: paambaati/codeclimate-action@v5
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CODE_CLIMATE_ID }}
        with:
          coverageLocations: |
            ${{github.workspace}}/coverage/lcov.info:lcov
      - name: Store unit test results
        uses: actions/upload-artifact@v3
        with:
          name: unit_test_results
          path: ${{github.workspace}}/coverage/lcov.info

  # integration-tests:
  #   name: Integration Tests
  #   needs: deploy #TODO: relies on deploy
  #   if: ${{ github.ref_name != 'production' }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #     - name: Run Cypress Tests
  #       uses: cypress-io/github-action@v5
  #       with:
  #         working-directory: src/app/testing/cypress
  #         spec: |
  #           src/app/testing/cypress/e2e/*.js
  #         browser: chrome
  #         #TODO: needs output from deploy
  #         config: baseUrl=${{ needs.deploy.outputs.application_endpoint }}
  #         wait-on: ${{ needs.deploy.outputs.application_endpoint }}
