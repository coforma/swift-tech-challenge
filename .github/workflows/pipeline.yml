name: "CICD Pipeline"
on:
  push:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}

jobs:
  changes:
    name: "Check for changes"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2.2.1
        id: filter
        with:
          filters: |
            terraform:
              - 'tf/**/*.tf'
              - 'tf/**/*.tfvars'
              - 'tf/**/*.tfbackend'
            typescript:
              - '**/*.ts'
              - '**/*.tsx'
              - '**/*.js'
              - '**/*.jsx'
            scss:
              - '**/*.scss'

  call-tf-validation:
    uses: ./.github/workflows/terraform-validate.yml
    needs: changes
    if: needs.changes.filter.outputs.terraform == 'true'
    strategy:
      matrix:
        project: [test]
    with:
      project: ${{ matrix.project }}
    name: Calling TF Validate

  call-app-lint:
    name: "Calling Application Lint Stage"
    uses: ./.github/workflows/app-lint.yml
    needs: changes
    if: needs.changes.filter.outputs.typescript == 'true' || needs.changes.filter.outputs.scss == 'true'

  call-tf-plan:
    name: "Calling TF Plan Stage"
    if: github.event_name == 'pull_request'
    uses: ./.github/workflows/terraform-plan.yml
    strategy:
      matrix:
        target: [stage, prod]
        project: [test]
    with:
      target: ${{ matrix.target }}
      project: ${{ matrix.project }}
    secrets:
      TERRAFORM_ROLE: ${{ secrets.TERRAFORM_ROLE }}
    permissions:
      id-token: write
      contents: read

  call-app-unit-testing:
    name: "Calling Unit Testing"
    uses: ./.github/workflows/app-unit-testing.yml
    needs: changes
    if: needs.changes.filter.outputs.typescript == 'true' || needs.changes.filter.outputs.scss == 'true'
    secrets:
      CODE_CLIMATE_ID: ${{ secrets.CODE_CLIMATE_ID }}
    permissions:
      id-token: write
      contents: read
      actions: read

  call-app-build:
    name: "Calling App Build Stage"
    uses: ./.github/workflows/app-build.yml
    needs: call-app-lint
    secrets:
      UPLOAD_ROLE: ${{ secrets.UPLOAD_ROLE }}
    with:
      upload: ${{ github.ref_protected }}
      environment: ${{ github.ref_protected == true && 'stage' || '' }}
    permissions:
      id-token: write
      contents: read
    

  call-tf-deploy:
    name: "Calling TF Deploy Stage"
    needs: call-tf-validation
    # Fix before merging!!!
    if: github.ref == 'refs/heads/issue/front-end-infra' && github.event_name == 'push'
    uses: ./.github/workflows/terraform-deploy.yml
    strategy:
      matrix:
        project: [test]
    with:
      target: stage
      project: ${{ matrix.project }}
    secrets:
      TERRAFORM_ROLE: ${{ secrets.TERRAFORM_ROLE }}
    permissions:
      id-token: write
      contents: read
  
  call-app-deploy:
    name: "Calling App Deploy (Stage)"
    uses: ./.github/workflows/app-deploy.yml
    needs:
      - call-app-build
      - call-tf-deploy
    concurrency:
      group: stage-deployment
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    with:
      target: stage
    secrets:
      DEPLOY_ROLE: ${{ secrets.DEPLOY_ROLE }}
    permissions:
      id-token: write
      contents: read
  
  call-integration-testing:
    name: "Calling Application Integration Testing"
    uses: ./.github/workflows/app-deploy.yml
    needs:
      - call-app-deploy
      - call-tf-deploy
    concurrency:
      group: stage-deployment
    with:
      application_endpoint: needs.call-tf-deploy.outputs.cloudfront_url


